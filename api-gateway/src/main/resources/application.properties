spring.application.name=api-gateway
server.port=8080

# 유레카 서버 등록
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

# Gateway 라우팅 설정
# reactive 웹 애플리케이션으로 실행하도록 지정
# Gateway는 Spring WebFlux 기반으로 동작
spring.main.web-application-type=reactive
# 서비스 디스커버리 로케이터 활성화
# 유레카 서버에 등록된 서비스를 자동으로 찾아서 라우팅 경로를 동적으로 생성
spring.cloud.gateway.discovery.locator.enabled=true
# 유레카 서버는 대문자로 등록. 소문자로 변환해서 사용
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# 수동 라우팅 설정
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/order/**

spring.cloud.gateway.routes[2].id=admin-service
spring.cloud.gateway.routes[2].uri=lb://admin-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/admin/**

# msa-front
# localhost:8080 => localhost:5173
spring.cloud.gateway.routes[3].id=msa-front
spring.cloud.gateway.routes[3].uri=http://localhost:5173
spring.cloud.gateway.routes[3].predicates[0]=Path=/
spring.cloud.gateway.routes[3].filters[0]=RedirectTo=302, http://localhost:5173/

# CORS 설정
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=http://localhost:5173
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowCredentials=true

# Acutuator 설정
# 기본 경로 설정
management.endpoints.web.base-path=/gateway/actuator
# 노출할 경로 엔드포인트 지정
# /gateway/routes   
# * 모든 엔드포인트 노출 보안때문에 주의를 해야 한다.
management.endpoints.web.exposure.include=gateway,routes,*

